var PatientAddress = React.createClass({
  render: function() {
    if( this.props.addresscount == 1 )
      addr_label = 'components.patient_card.address_col';
    else
      addr_label = 'components.patient_card.alt_address_col';
    return (
      <span>
      <label>{I18n.t(addr_label)}</label>
      <span>{this.props.address}<br /></span>
      </span>
    );
  }
});

var PatientCard = React.createClass({
  getDefaultProps: function() {
    return {
      canEdit: false,
      canAddTest: true
    }
  },

  render: function () {
    var patient = this.props.patient;

    function patientInfo(patient)
    {
      var string = "";
      if (patient.birth_date_on) {
        string += patient.birth_date_on
        if( patient.age > 0)
          string += " (" + patient.age + " y/o)";
        else // months only
          string += " (" + patient.age_months + " m/o)";
      }
      return string;
    }

    if (patient == null)
    {
      return (
        <%= to_jsx(patient_card(image: asset_url('card-unkown.png')) do |c|
          c.top do
            "No patient information"
          end
        end) %>
      );
    }
    else
    {
      addresscount = 0
      return (
        <%= to_jsx(patient_card(image: asset_url('card-unkown.png')) do |c|
          c.top do
            raw <<-JSX
              <ul class="column1">
                <li>
                  <label>{I18n.t("components.patient_card.name_col")}</label>
                  {patient.name || "(Unknown name)"}
                </li>
                <li>
                  <label>{I18n.t("components.patient_card.gender_col")}</label>
                  {patient.gender}
                </li>
                <li>
                  <label>{I18n.t("components.patient_card.date_of_birth_col")}</label>
                  {patientInfo(patient)}
                </li>
                <li>
                  { this.props.patient.multi_address.map(function(addr, index)
                    {
                      addresscount++
                      return <PatientAddress key={ index } address={ addr } addresscount={ addresscount }/>
                    })
                  }
                </li>
                <li>
                  <label>{I18n.t("components.patient_card.phone_col")}</label>
                  {patient.phone}<br/>
                </li>
                <li>
                  <label>{I18n.t("components.patient_card.email_col")}</label>
                  {(function(){
                    if (patient.email) {
                      return <a href={"mailto:" + patient.email}>{patient.email}</a>;
                    }
                  }.bind(this))()}
                </li>
              </ul>
            JSX
          end

          c.actions do
            raw <<-JSX
            {(function(){
              if (!this.props.canEdit) return;

              return (
                <a href={"/patients/" + patient.id + "/edit"} title= {I18n.t("components.patient_card.edit")}>
                  <img src="#{asset_url("ic-pencil.png")}"/>
                </a>);
            }.bind(this))()}

            {(function(){
              if (!this.props.canAddTest) return;
              if (this.props.showTestLink != true) return;
              return (
                <a href={"/encounters/new?mode=fresh_tests&patient_id=" + patient.id } title={I18n.t("components.patient_card.create_test_order")} className="label">
                  {I18n.t("components.patient_card.create_test_order")}
                </a>);
            }.bind(this))()}
            JSX
          end
        end) %>
      );
    }
  }
});
