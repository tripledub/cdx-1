- content_for(:subheader) do
  .filterbar.filterbartest
    .heading
      .title
        = I18n.t('users.index.users')
      .topfilteropt
        = react_component "AddUserLink", roles: @available_roles_hash, context: @navigation_context.to_hash
  %form#filters-form.filteroptions{action: users_path, "data-auto-submit" => true}
    %input{type: "hidden", name: "page_size", value: @page_size}
    .row.custom_filters
      .advanced
        .row
          .filter
            %label.block
              = I18n.t('users.index.name')
            %input.input-block{type: "text", name: "name", value: params["name"]}
          .filter
            %label.block
              = I18n.t('users.index.role')
            = cdx_select name: "role", value: params["role"] do |select|
              - select.item "", I18n.t('users.index.show_all')
              - select.items @context_roles_hash, :value, :label
          .filter
            %label.block
              = I18n.t('users.index.last_activity')
            = cdx_select name: "last_activity", value: params["last_activity"] do |select|
              - select.item "", I18n.t('users.index.show_all')
              - select.items @date_options, :value, :label
          - if @can_update
            .filter
              %label.block
                = I18n.t('users.index.status')
              = cdx_select name: "is_active", value: params["is_active"] do |select|
                - select.items User.status_options, :value, :label

.row.paginationHeader
  .col
    - if @users.empty?
      = empty_data icon: 'icon-outline-user xx-large' do |c|
        - c.body do
          %h1
            = I18n.t('users.index.no_users', entity_name: truncated_navigation_context_entity_name)
          %p
            = I18n.t('users.index.invite_users')
    - else
      %section.row
        .small-12.columns.box
          %header
            = image_tag('img/user.png')
            %h3
              = I18n.t('users.index.user', count: @total)
            %span.table-actions
              = link_to users_path(filters_params.merge(format: :csv)), title: I18n.t('users.index.download_csv') do
                %span.fa.fa-download
          .box-content
            = react_component "UsersIndexTable", users: Users::Presenter.index_table(@users, @navigation_context), orderBy: @order_by
            .pagination
              = render 'shared/pagination'
