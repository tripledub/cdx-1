- content_for(:subheader) do

  .filterbar.filterbartest
    .heading
      .title
        = I18n.t('test_orders.index.header')
    .topfilteropt
      %input#query_button.btn-primary.filtershow(type='button' value="#{I18n.t('test_orders.filters.show_filters')}")

  %form.filteroptions#filters-form{action: test_orders_path, "data-auto-submit" => true}
    %input{type: "hidden", name: "page_size", value: @page_size}
    .row.center.custom_filters
      .col.pe-10
      .advanced
        .row
          .filter
            %label.block
              = I18n.t('test_orders.filters.testing_for')
            = cdx_select name: "testing_for", value: params["testing_for"] do |select|
              - select.item "", I18n.t('test_orders.filters.show_all')
              - select.items Encounter.testing_for_options.map {|e| e.reverse }
          .filter
            %label.block
              = I18n.t('test_orders.filters.status')
            = cdx_select name: "status", value: params["status"] do |select|
              - select.item "", I18n.t('test_orders.filters.show_all_outstanding')
              - select.items Encounter.status_options.map {|e| e.reverse }
          .filter
            %label.block
              = I18n.t('test_orders.filters.date')
            = cdx_select name: "since", value: params["since"] do |select|
              - select.item "", I18n.t('test_orders.filters.show_all')
              - select.items Extras::Dates::Filters.date_options_for_filter, :value, :label
          .filter
            %label.block
              = I18n.t('test_orders.filters.test_order_id')
            %input{type: "text", name: "encounter_id", value: params["encounter_id"]}


.row.paginationHeader
  .col
    - if @tests.empty?
      = empty_data icon: 'icon-outline-test xx-large' do |c|
        - c.body do
          %h1
            = I18n.t('test_orders.index.no_test_orders')
    - else
      %section.row
        = react_component "TestOrdersIndexTable", testOrders: TestOrders::Presenter.index_view(@tests), orderBy: @order_by,
          imageUrl: image_url('img/test-tube.png'), headerTitle: I18n.t('test_orders.index.test_order', count: @total),
          csvUrl: test_orders_path, csvTitle: I18n.t('devices.index.download_csv')
        .pagination
          = render 'shared/pagination'
