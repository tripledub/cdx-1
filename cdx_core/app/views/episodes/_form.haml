= form_for([@patient, @episode], html: { class: 'zebra' } ) do |f|
  = f.hidden_field :closed, value: @episode.closed

  :javascript
    $(document).ready( function()
    {
      var require_prev_value = false;
      $('.panel-tab').hide();
      // is_new_entry is added in the new or edit files
      if(is_new_entry)
      {
        $('#episode_previous_history').hide();
        $('.questions').hide();
      }
      else
      {
        $('#outcome').show();
      }

      $('form').on('submit', function(event){
        if(require_prev_value)
        {
          if($('#episode_previous_history').val() == '') // blank
          {
            // dont allow submit
            event.preventDefault();
            alert( I18n.t('episodes.form.episode_previous_history_required') );
            return false;
          }
        }
      });

      // Episode History manager
      $('#episode_initial_history').on('change', function()
      {
        $('.questions').show();
        if(is_new_entry)
        {
          $('#outcome').hide();
        }
        var myval = $(this).val();
        if(myval != 'previous')
        {
          require_prev_value = false;
          $('#episode_previous_history').hide();
          $('#drugres').hide();
          if(myval=='new')
            $('#episode_diagnosis').val('presumptive_tb');
        }
        else
        {
          $('#episode_previous_history').show();
          require_prev_value = true;
        }
      });
      // Tab Handler
      $('.panel-tab#episodetype_tb').show();  // default
      $('span#episodeType').text('TB');
      $('#epitabs li').on('click', function()
      {
        var type = $(this).attr('id').split('_')[1];  // get bit after the 'tab_' in the id
        $('#epitabs li').removeClass('active');
        $(this).addClass('active');
        $('.panel-tab').hide();
        $('.panel-tab#episodetype_'+type).show();
        $('span#episodeType').text(type);
      });
    });

  = render partial: 'disease_tabs', locals: { f: f }

  .panel.panel-tab#episodetype_ebola
    .row
      .col-6
        %b
          = I18n.t('episodes.form.episode_type_not_available')

  .panel.panel-tab#episodetype_hiv
    .row
      .col-6
        %b
          = I18n.t('episodes.form.episode_type_not_available')

  .panel.panel-tab#episodetype_tb
    .row
      .col-6
        = f.label I18n.t('episodes.form.history_tb')
      .col-6
        = f.collection_select :initial_history, Episode.initial_history_options, :id, :name, include_blank: I18n.t('select.default')
        = f.collection_select :previous_history, Episode.previous_history_options, :id, :name, include_blank: I18n.t('select.default')
    .row.questions
      .col-6
        = f.label :diagnosis
      .col-6
        = f.collection_select :diagnosis, Episode.general_diagnosis_options, :id, :name, include_blank: I18n.t('select.default')
    .row.questions
      .col-6.flexStart
        = f.label :anatomical_site_diagnosis
      .col-6
        = collection_radio_buttons(:episode, :anatomical_site_diagnosis, Episode.anatomical_diagnosis_options, :id, :name)
    .row.questions
      .col-6
        = f.label I18n.t('episodes.form.hiv_status')
      .col-6
        = f.collection_select :hiv_status, Episode.hiv_status_options, :id, :name, include_blank: I18n.t('select.default')
    .row.questions#drugres
      .col-6
        = f.label :drug_resistance
      .col-6
        = f.collection_select :drug_resistance, Episode.drug_resistance_options, :id, :name, include_blank: I18n.t('select.default')
    .zebra.questions#outcome
      = react_component 'EpisodeSelectOutcome', outcomeOptions: outcome_options, selected: @episode.outcome
    .row.button-actions
      = f.submit
